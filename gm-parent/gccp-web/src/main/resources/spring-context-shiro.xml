<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       default-lazy-init="true">

    <description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/gm.properties"/>

    <!-- 安全认证过滤器,beanId和web.xml中配置的filter name需要保持一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 安全管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 默认的登陆访问url -->
        <property name="loginUrl" value="/login"/>
        <!-- 登陆成功后跳转的url -->
        <property name="successUrl" value="/"/>
        <!-- 没有权限时跳转的url -->
        <property name="unauthorizedUrl" value="/unauth"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>
        <!-- 访问地址的过滤规则,从上至下的优先级,如果有匹配的规则,就会返回,不会再进行匹配 -->
        <property name="filterChainDefinitions">
            <value>
                /register = anon
                /servlet/validateCodeServlet = anon
                /language/* = anon
                /theme/* = anon
                /static/** = anon
                /userfiles/** = anon
                /monitor/druid =anon
                /login = authc
                /logout = logout
                /** = user
            </value>
        </property>
    </bean>

    <bean id="systemAuthorizingRealm" class="com.mokylin.gm.modules.system.security.SystemAuthorizingRealm">
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!-- 定义 Shiro 主要业务对象 -->
    <!-- 权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
        <!-- realm认证的实现 -->
        <property name="realm" ref="systemAuthorizingRealm"/>
        <!-- 缓存管理器 -->
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>
    <!-- session管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 超时时间 -->
        <property name="globalSessionTimeout" value="3600000"/>
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="shiroSessionDAO"/>
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID-->
        <property name="sessionIdCookie" ref="shareSession"/>
        <!-- 定时检查失效的session-->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
    </bean>

    <!-- sessionIdCookie的实现，用于重写覆盖容器默认的JSessionID-->
    <bean id="shareSession" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie的name,对应的默认是JSessionID-->
        <constructor-arg name="name" value="SHAREJSESSIONID"/>
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
        <property name="path" value="/"/>
    </bean>

    <!--session存储的实现 缓存-->
    <bean id="shiroSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!-- 用户授权session Cache -->
    <!-- 采用EhCache -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>
    <!-- 采用单机内存Cache -->
    <!--<bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>-->
    <!-- session集群 -->
    <!--    <bean id="shiroCacheManager" class="com.cyb.gm.modules.system.security.ShiroRedisCacheManager">
            <property name="cached" ref="redisCached"/>
        </bean>-->

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行， -->
    <!-- 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>